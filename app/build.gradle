plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk 33

    defaultConfig {
        configurations.all {
            resolutionStrategy {
                force("androidx.emoji2:emoji2-views-helper:1.3.0")
                force("androidx.emoji2:emoji2:1.3.0")
            }
        }

        applicationId "com.example.evagnelyrics"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures{
        compose true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures{
        viewBinding = true
    }
}

dependencies {
    def room_version = "2.5.2"

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'

    //ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    //retofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    //retofit converter
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'
    //room
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //Compose
    // Import the Compose BOM
    implementation platform('androidx.compose:compose-bom:2023.01.00')

    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation 'androidx.activity:activity-compose:1.7.2'
    debugImplementation "androidx.compose.ui:ui-tooling"
    implementation "androidx.compose.compiler:compiler:1.3.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"
    //for collect
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.2"

    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    // Optional -- UI testing with Compose
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"




    //DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.datastore:datastore:1.0.0"

    //Permissions
    implementation "com.google.accompanist:accompanist-permissions:0.25.1"


    implementation 'androidx.core:core-splashscreen:1.0.1'

    //Images--Icons
    implementation("io.coil-kt:coil-compose:2.4.0")

    implementation("androidx.compose.material:material-icons-extended:1.5.2")

    //Navigation
    implementation "androidx.navigation:navigation-compose:2.5.1"

    implementation "com.google.accompanist:accompanist-pager:0.22.0-rc"

    // Koin for Android
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
    androidTestImplementation "io.insert-koin:koin-androidx-compose:$koin_version"


    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // Optional -- Mockito framework
//    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    // Optional -- mockito-kotlin
//    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    // Optional -- Mockk framework
    def mockkVersion = "1.13.8"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "com.google.truth:truth:1.1.4"

}